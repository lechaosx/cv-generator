services:
  redis:
    image: redis:latest
    volumes:
      - redis-data:/data

  backend:
    build: 
      context: backend
      target: dev
    environment:
      OPENAI_KEY: /run/secrets/openai_key
    secrets:
      - openai_key
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=PathPrefix(`/api`)
      - traefik.http.services.backend.loadbalancer.server.port=5000

  frontend:
    build: 
      context: frontend
      target: dev
    volumes:
      - ./frontend/public:/app/public
      - ./frontend/src:/app/src
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000

  traefik:
    image: traefik:latest
    command:
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - frontend
      - backend

volumes:
  redis-data:

secrets:
  openai_key:
    file: ./secrets/openai_key
